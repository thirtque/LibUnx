# clang-format 13
# https://clang.llvm.org/docs/ClangFormatStyleOptions.html
---
BasedOnStyle: LLVM
IndentWidth: 4
DeriveLineEnding: false
UseCRLF: false
UseTab: Never
---
Language: Cpp
AccessModifierOffset: 4
AlignAfterOpenBracket: DontAlign
AlignArrayOfStructures: None
AlignConsecutiveAssignments: None
AlignConsecutiveBitFields: None
AlignConsecutiveDeclarations: None
AlignConsecutiveMacros: None
AlignEscapedNewlines: Right
AlignOperands: DontAlign
AlignTrailingComments: false
AllowAllArgumentsOnNextLine: true # ?
AllowAllParametersOfDeclarationOnNextLine: true # ?
AllowShortBlocksOnASingleLine: Empty
AllowShortCaseLabelsOnASingleLine: true
AllowShortEnumsOnASingleLine: false # ?
AllowShortFunctionsOnASingleLine: Empty
AllowShortIfStatementsOnASingleLine: Never
AllowShortLambdasOnASingleLine: None
AllowShortLoopsOnASingleLine: false
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: false
AlwaysBreakTemplateDeclarations: Yes
BinPackArguments: false
BinPackParameters: false
BitFieldColonSpacing: Both
BraceWrapping:
    AfterCaseLabel: false
    AfterClass: false
    #BraceWrappingAfterControlStatementStyle: Never # clang-format 14
    AfterEnum: false
    AfterFunction: false
    AfterNamespace: false
    #AfterObjCDeclaration: false
    AfterStruct: false
    AfterUnion: false
    AfterExternBlock: false
    BeforeCatch: true
    BeforeElse: true
    BeforeLambdaBody: false
    BeforeWhile: true
    IndentBraces: false
    SplitEmptyFunction: true
    SplitEmptyRecord: true
    SplitEmptyNamespace: true
#BreakAfterJavaFieldAnnotations: true
BreakBeforeBinaryOperators: None
BreakBeforeBraces: Custom
BreakBeforeConceptDeclarations: true # ?
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: AfterColon
BreakInheritanceList: AfterColon
BreakStringLiterals: true
ColumnLimit: 120
#CommentPragmas: ""
CompactNamespaces: false
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4
Cpp11BracedListStyle: true # ?
DerivePointerAlignment: false
DisableFormat: false
EmptyLineAfterAccessModifier: Leave
EmptyLineBeforeAccessModifier: Leave
ExperimentalAutoDetectBinPacking: false
FixNamespaceComments: true # ?
#ForEachMacros: [ ]
#IfMacros: [ ]
IncludeBlocks: Regroup
IncludeCategories:
    -   Regex: '<[[:alnum:].]+>'
        Priority: 1
        SortPriority: 1
    -   Regex: '.*'
        Priority: 2
        SortPriority: 2
IncludeIsMainRegex: "$"
#IncludeIsMainSourceRegex: "" # ?
IndentAccessModifiers: true
IndentCaseBlocks: true
IndentCaseLabels: true
IndentExternBlock: Indent
IndentGotoLabels: false
IndentPPDirectives: BeforeHash
IndentRequires: false
IndentWidth: 4
IndentWrappedFunctionNames: false
InsertTrailingCommas: Wrapped
#JavaImportGroups: []
#JavaScriptQuotes: Single
#JavaScriptWrapImports: true
KeepEmptyLinesAtTheStartOfBlocks: false
LambdaBodyIndentation: OuterScope
#MacroBlockBegin: ""
#MacroBlockEnd: ""
MaxEmptyLinesToKeep: 1
NamespaceIndentation: All
#NamespaceMacros: []
#ObjCBinPackProtocolList: Auto
#ObjCBlockIndentWidth: 4
#ObjCBreakBeforeNestedBlockParam: false
#ObjCSpaceAfterProperty: false
#ObjCSpaceBeforeProtocolList: false
PPIndentWidth: 4
PackConstructorInitializers: Never
PenaltyBreakAssignment: 1
PenaltyBreakBeforeFirstCallParameter: 1
PenaltyBreakComment: 1
PenaltyBreakFirstLessLess: 1
PenaltyBreakString: 1
PenaltyBreakTemplateDeclaration: 1
PenaltyExcessCharacter: 1
PenaltyIndentedWhitespace: 1
PenaltyReturnTypeOnItsOwnLine: 1
PointerAlignment: Left
QualifierAlignment: Left
#QualifierOrder: # clang-format 14
#  - "const"
#  - "inline"
#  - "static"
#  - "constexpr"
#  - "volatile"
#  - "restrict"
#  - "type"
#RawStringFormats: []
ReferenceAlignment: Left
ReflowComments: true
ShortNamespaceLines: 16
SortIncludes: CaseInsensitive
#SortJavaStaticImport: Before
SortUsingDeclarations: true
SpaceAfterCStyleCast: true
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: false
SpaceAroundPointerQualifiers: Default
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: false
SpaceBeforeInheritanceColon: false
SpaceBeforeParens: ControlStatements # clang-format 13
#SpaceBeforeParens: Custom # clang-format 14
#SpaceBeforeParensOptions:
#  AfterControlStatements: true
#  AfterForeachMacros: true
#  AfterFunctionDeclarationName: false
#  AfterFunctionDefinitionName: false
#  AfterIfMacros: true
#  BeforeNonEmptyParentheses: false
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 1
SpacesInAngles: Never
SpacesInCStyleCastParentheses: false
SpacesInConditionalStatement: false
SpacesInContainerLiterals: false
SpacesInLineCommentPrefix:
    Minimum: 1
    Maximum: 1
SpacesInParentheses: false
SpacesInSquareBrackets: false
Standard: c++20
#StatementAttributeLikeMacros: []
#StatementMacros: []
TabWidth: 4
#TypenameMacros: []
#WhitespaceSensitiveMacros: []